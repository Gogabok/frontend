{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
{{- range $name := list "api" "files" "medea" "" }}
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: {{ printf "%s.%s" (printf "%s-%s" (include "frontend.fullname" $) $name | trimSuffix "-") $host | quote }}
  namespace: {{ $.Release.Namespace | quote }}
  labels:
    helm.sh/chart: {{ include "frontend.chart" $ | quote }}
    app.kubernetes.io/name: {{ include "frontend.name" $ | quote }}
    app.kubernetes.io/instance: {{ $.Release.Name | quote }}
    app.kubernetes.io/managed-by: {{ $.Release.Service | quote }}
    app.kubernetes.io/component: app
  {{- with $.Values.labels }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
  annotations:
  {{- if and $.Values.ingress.tls.enabled $.Values.ingress.tls.auto }}
    kubernetes.io/tls-acme: "true"
  {{- end }}
  {{- if not $.Values.ingress.tls.enabled }}
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
  {{- end }}
  {{- if $.Values.ingress.httpAuth.enabled }}
  {{- if eq $name "" }}
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: {{ printf "%s.htpasswd" (include "frontend.fullname" $) | quote }}
    nginx.ingress.kubernetes.io/auth-realm: Authentication Required
  {{- end }}
  {{- end }}
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
  {{- if or (eq $name "api") (eq $name "medea") }}
    nginx.ingress.kubernetes.io/rewrite-target: /$1
  {{- end }}
  {{- if eq $name "files" }}
    nginx.ingress.kubernetes.io/rewrite-target: /files/$1
  {{- end }}
  {{- with $.Values.ingress.annotations }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  rules:
  {{- range $h := list $host (printf "www.%s" $host) }}
    - host: {{ $h | quote }}
      http:
        paths:
        {{- if eq $name "" }}
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: {{ include "frontend.fullname" $ | quote }}
                port:
                  name: http
        {{- end }}
        {{- if eq $name "api" }}
          - path: /api/(.*)
            pathType: ImplementationSpecific
            backend:
              service:
              {{- if $.Values.backend.deploy }}
                name: {{ include "frontend.call-nested" (list $ "backend" "backend.fullname") | quote }}
                port:
                  name: http
              {{- else }}
                name: {{ $.Values.backend.existing.service.name | quote }}
                port:
                  name: {{ $.Values.backend.existing.service.port.name | quote }}
              {{- end }}
        {{- end }}
        {{- if eq $name "files" }}
          - path: /files/(.*)
            pathType: ImplementationSpecific
            backend:
              service:
              {{- if and $.Values.backend.deploy $.Values.backend.filestorage.deploy }}
                name: {{ include "frontend.call-nested" (list $ "backend.filestorage" "minio.fullname") | quote }}
                port:
                  name: http
              {{- else }}
                name: {{ $.Values.filestorage.existing.service.name | quote }}
                port:
                  name: {{ $.Values.filestorage.existing.service.port.name | quote }}
              {{- end }}
        {{- end }}
        {{- if eq $name "medea" }}
          - path: /medea/(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: {{ include "frontend.call-nested" (list $ "medea" "medea.fullname") | quote }}
                port:
                  name: http
          - path: /medea-control-mock/(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: {{ include "frontend.call-nested" (list $ "medea" "medea.fullname") | quote }}
                port:
                  name: control-http
        {{- end }}
  {{- end }}
{{- if $.Values.ingress.tls.enabled }}
  tls:
    - secretName: {{ if $.Values.ingress.tls.auto -}}
                    {{ printf "%s.tls" ($host | trunc 48) | quote }}
                  {{- else -}}
                    {{ required (print `TLS Secret name must be specified for host ` $host ` !`) (index $.Values.ingress.tls.secretName $host) | quote }}
                  {{- end }}
      hosts:
        - {{ $host | quote }}
        - {{ printf "www.%s" $host | quote }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
